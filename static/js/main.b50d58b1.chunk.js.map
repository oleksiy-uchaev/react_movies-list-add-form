{"version":3,"sources":["components/TextField/TextField.tsx","components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","utils/pattern.js","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["InputName","MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","pattern","isLink","isNotEmpty","TextField","name","value","label","required","setHasError","onChange","useState","Math","random","toString","slice","id","touched","setToched","isValid","setIsValid","hasError","useEffect","document","querySelectorAll","length","htmlFor","classNames","type","placeholder","event","target","onBlur","nameType","test","validateInput","NewMovie","onAdd","setTitle","setDescription","setImdbId","setImgUrl","setmdbUrl","newMovie","isFormValid","onSubmit","preventDefault","disabled","App","moviesFromServer","newMovieList","setNewMovieList","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b50d58b1.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useState, useEffect } from 'react';\nimport { pattern } from '../../utils/pattern';\n\nenum InputName {\n  title = 'title',\n  description = 'description',\n  imgUrl = 'imgUrl',\n  imdbUrl = 'imdbUrl',\n  imdbId = 'imdbId',\n}\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  setHasError: (newValue: boolean) => void,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  setHasError = () => {},\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setToched] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n\n  const hasError = touched && required && !isValid;\n\n  const validateInput = (nameType: InputName) => {\n    switch (nameType) {\n      case InputName.description:\n        return true;\n\n      case InputName.imgUrl:\n      case InputName.imdbUrl:\n        return pattern.isLink.test(value);\n\n      default:\n        return pattern.isNotEmpty.test(value);\n    }\n  };\n\n  const handleBlur = () => {\n    const nameType = name as keyof typeof InputName;\n\n    setToched(true);\n    setIsValid(validateInput(InputName[nameType]));\n  };\n\n  useEffect(() => {\n    setHasError(document.querySelectorAll('.help').length !== 0);\n  }, [isValid]);\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={handleBlur}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`valid ${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","export const pattern = {\n  // eslint-disable-next-line max-len\n  isLink: /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/,\n  isNotEmpty: /[\\S\\s]+[\\S]+/,\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void,\n};\n\nexport const NewMovie = ({ onAdd }: Props) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setmdbUrl] = useState('');\n\n  const [hasError, setHasError] = useState(false);\n\n  const newMovie: Movie = {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setImdbId('');\n    setImgUrl('');\n    setmdbUrl('');\n    setDescription('');\n  };\n\n  const handleSabmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    onAdd(newMovie);\n    setHasError(false);\n    resetForm();\n  };\n\n  const isFormValid = title && imdbId && imdbUrl && imgUrl && !hasError;\n\n  return (\n    <form className=\"NewMovie\" onSubmit={handleSabmit}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        value={title}\n        onChange={setTitle}\n        setHasError={setHasError}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        value={description}\n        onChange={setDescription}\n        setHasError={setHasError}\n        required\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        setHasError={setHasError}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        value={imdbUrl}\n        onChange={setmdbUrl}\n        setHasError={setHasError}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        value={imdbId}\n        onChange={setImdbId}\n        setHasError={setHasError}\n        required\n      />\n\n      <div className=\"field is-grouped is-justify-content-space-between\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isFormValid}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\nimport './App.scss';\n\nexport const App = () => {\n  const [newMovieList, setNewMovieList] = useState(moviesFromServer);\n\n  const onAdd = (newMovie: Movie) => {\n    setNewMovieList([...newMovieList, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={newMovieList} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}